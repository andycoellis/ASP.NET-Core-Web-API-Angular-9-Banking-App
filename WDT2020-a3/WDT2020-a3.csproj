<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <RootNamespace>WDT2020_a3</RootNamespace>
    <UserSecretsId>442c3c7f-1ef2-4039-9d48-89a9082ed288</UserSecretsId>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="5.6.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.6.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.1" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="ClientApp\src\app\_helpers\index.ts" />
    <None Remove="ClientApp\src\app\_helpers\jwt.interceptor" />
    <None Remove="ClientApp\src\app\_helpers\jwt.interceptor.ts" />
    <None Remove="ClientApp\src\app\_services\index.ts" />
    <None Remove="ClientApp\src\app\_services\authentication.service.ts" />
    <None Remove="ClientApp\src\app\_models\index.ts" />
    <None Remove="ClientApp\src\app\_models\user.ts" />
    <None Remove="ClientApp\src\app\app.routing.ts" />
    <None Remove="ClientApp\src\app\_helpers\auth.guard.ts" />
    <None Remove="ClientApp\src\app\_helpers\error.interceptor.ts" />
    <None Remove="ClientApp\src\app\_services\billpay.service.ts" />
    <None Remove="ClientApp\src\app\components\login\index.ts" />
    <None Remove="ClientApp\src\app\components\login\login.component.ts" />
    <None Remove="ClientApp\src\app\components\home\index.ts" />
    <None Remove="ClientApp\src\app\components\customers\index.ts" />
    <None Remove="ClientApp\src\app\components\statement\index.ts" />
    <None Remove="ClientApp\src\app\components\billpays\fetch-billpays-component.ts" />
    <None Remove="ClientApp\src\app\components\billpays\index.ts" />
    <None Remove="ClientApp\src\app\components\accounts\index.ts" />
    <None Remove="ClientApp\src\app\components\errorpage\index.ts" />
    <None Remove="ClientApp\src\app\components\errorpage\errorpage.component.ts" />
    <None Remove="ClientApp\src\app\components\errorpage\error401.component.ts" />
    <None Remove="ClientApp\src\app\components\errorpage\error404.component.ts" />
    <None Remove="ClientApp\src\app\_services\login.service.ts" />
    <None Remove="ClientApp\src\app\components\user\index.ts" />
    <None Remove="ClientApp\src\app\components\user\user.component.ts" />
    <None Remove="ClientApp\src\app\components\user\details.component.ts" />
    <None Remove="ClientApp\src\app\_services\user.service.ts" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Services\" />
    <Folder Include="ClientApp\src\app\components\billpays\" />
    <Folder Include="ClientApp\src\app\_helpers\" />
    <Folder Include="ClientApp\src\app\_services\" />
    <Folder Include="ClientApp\src\app\_models\" />
    <Folder Include="ClientApp\src\app\components\login\" />
    <Folder Include="ClientApp\src\app\components\home\" />
    <Folder Include="ClientApp\src\app\components\errorpage\" />
    <Folder Include="ClientApp\src\app\components\user\" />
    <Folder Include="Helpers\" />
    <Folder Include="Services\Repositories\" />
    <Folder Include="Services\IRepositories\" />
    <Folder Include="Services\DBContexts\" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\_helpers\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_helpers\jwt.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_services\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_services\authentication.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_models\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_models\user.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\app.routing.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_helpers\auth.guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_helpers\error.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_services\billpay.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\login\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\login\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\home\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\customers\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\statement\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\billpays\fetch-billpays-component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\billpays\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\accounts\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\errorpage\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\errorpage\errorpage.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\errorpage\error401.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\errorpage\error404.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\user\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\user\user.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\user\details.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\_services\user.service.ts" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Controllers\WeatherForecastController.cs" />
    <Compile Remove="WeatherForecast.cs" />
    <Compile Remove="Models\Repository\IDataRepository.cs" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
